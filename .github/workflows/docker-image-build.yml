name: Docker Image Build
# Build a multi-platform docker image on demand (no publish)

on: [workflow_dispatch]

env:
  IMAGE_NAME: scanoss/scanoss-py

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup and build the python package
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Build package
        run: make dist

        # Add support for more platforms with QEMU
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
#      - name: Log into registry ${{ env.REGISTRY }}
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      # Extract metadata (tags, labels) for Docker
#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build Docker image with Buildx
      - name: Build Docker Image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE_NAME }}:latest
          outputs: type=docker,dest=/tmp/scanoss-py.tar

      - name: Test Docker Image
        run: |
          docker load --input /tmp/scanoss-py.tar
          docker image ls -a
          docker run ${{ env.IMAGE_NAME }} version
          docker run ${{ env.IMAGE_NAME }} scan -o results.json tests
          echo "ID Count: $(cat results.json | grep '"id":' | wc -l)"