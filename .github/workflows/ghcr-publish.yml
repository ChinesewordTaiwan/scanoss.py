name: Publish GHCR Container
# Publish a multi-platform container when a package is released (tagged)

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'
#   release:
#     types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: scanoss/scanoss-py

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Setup and build python package
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          
      - name: Build package
        run: make dist
        
      # Install the cosign tool except on PR
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2

      - name: Check Cosign Version
        run: cosign version

        # Add support for more platforms with QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
#        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Test the docker image
      - name: Test Published Image
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker run -it ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#      - name: Sign Docker Image
#        if: ${{ github.event_name != 'pull_request' }}
#        env:
#          TAGS: ${{ steps.meta.outputs.tags }}
#          COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
#          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
#        run: cosign sign --key env://COSIGN_PRIVATE_KEY --no-tlog-upload=true ${TAGS}

#      - name: Sign the images with GitHub OIDC Token
#        run: cosign sign ${TAGS}
#        env:
#          TAGS: ${{ steps.meta.outputs.tags }}
#          COSIGN_EXPERIMENTAL: true
