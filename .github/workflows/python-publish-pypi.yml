name: Publish Python Package - PyPI
# This workflow will upload a Python Package using Twine to PyPI and create a draft release when a tag is pushed

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
#  release:
#    types: [ published ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Build Package
        run: make dist

      - name: Install Test Package
        run: |
          pip install -r requirements.txt
          pip install dist/scanoss-*-py3-none-any.whl
          which scanoss-py

      - name: Run Local Tests
        run: |
          which scanoss-py
          scanoss-py version
          scanoss-py scan tests > results.json
          id_count=$(cat results.json | grep '"id":' | wc -l)
          echo "ID Count: $id_count"
          if [[ $id_count -lt 1 ]]; then
            echo "Error: Scan test did not produce any results. Failing"
            exit 1
          fi
          pip uninstall -y scanoss

      - name: Publish Package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: dist/*

  test:
    if: success()
    needs: [ deploy ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'

      - name: Install Remote Package
        run: |
          scanoss_version=$(python ./version.py)
          echo "Installing scanoss ${scanoss_version}..."
          pip install --upgrade scanoss==$scanoss_version
          which scanoss-py

      - name: Run Tests
        run: |
          which scanoss-py
          scanoss-py version
          scanoss-py scan tests > results.json
          id_count=$(cat results.json | grep '"id":' | wc -l)
          echo "ID Count: $id_count"
          if [[ $id_count -lt 1 ]]; then
            echo "Error: Scan test did not produce any results. Failing"
            exit 1
          fi
